---
# Auth Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: microshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: microshop/auth-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: MONGODB_AUTH_URI
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: microshop-secrets
              key: JWT_SECRET
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: "0.2"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: microshop
spec:
  selector:
    app: auth-service
  ports:
  - port: 3001
    targetPort: 3001
---

# Products Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-service
  namespace: microshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: products-service
  template:
    metadata:
      labels:
        app: products-service
    spec:
      containers:
      - name: products-service
        image: microshop/products-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
        env:
        - name: PORT
          value: "3002"
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: MONGODB_PRODUCTS_URI
        - name: INVENTORY_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: INVENTORY_SERVICE_URL
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: "0.2"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: products-service
  namespace: microshop
spec:
  selector:
    app: products-service
  ports:
  - port: 3002
    targetPort: 3002
---

# Orders Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service
  namespace: microshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders-service
  template:
    metadata:
      labels:
        app: orders-service
    spec:
      containers:
      - name: orders-service
        image: microshop/orders-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3003
        env:
        - name: PORT
          value: "3003"
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: MONGODB_ORDERS_URI
        - name: INVENTORY_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: INVENTORY_SERVICE_URL
        - name: PAYMENT_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: PAYMENTS_SERVICE_URL
        - name: NOTIFICATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: NOTIFICATIONS_SERVICE_URL
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: "0.2"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
  namespace: microshop
spec:
  selector:
    app: orders-service
  ports:
  - port: 3003
    targetPort: 3003
---

# Payments Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-service
  namespace: microshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payments-service
  template:
    metadata:
      labels:
        app: payments-service
    spec:
      containers:
      - name: payments-service
        image: microshop/payments-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3004
        env:
        - name: PORT
          value: "3004"
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: MONGODB_PAYMENTS_URI
        - name: NOTIFICATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: NOTIFICATIONS_SERVICE_URL
        livenessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: "0.2"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: payments-service
  namespace: microshop
spec:
  selector:
    app: payments-service
  ports:
  - port: 3004
    targetPort: 3004
---

# Inventory Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: microshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: inventory-service
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
      - name: inventory-service
        image: microshop/inventory-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3005
        env:
        - name: PORT
          value: "3005"
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: MONGODB_INVENTORY_URI
        livenessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: "0.2"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: microshop
spec:
  selector:
    app: inventory-service
  ports:
  - port: 3005
    targetPort: 3005
---

# Notifications Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notifications-service
  namespace: microshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notifications-service
  template:
    metadata:
      labels:
        app: notifications-service
    spec:
      containers:
      - name: notifications-service
        image: microshop/notifications-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3006
        env:
        - name: PORT
          value: "3006"
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: MONGODB_NOTIFICATIONS_URI
        - name: EMAIL_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: microshop-config
              key: EMAIL_SERVICE_URL
        livenessProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: "0.2"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: notifications-service
  namespace: microshop
spec:
  selector:
    app: notifications-service
  ports:
  - port: 3006
    targetPort: 3006
---

# Email Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-service
  namespace: microshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: email-service
  template:
    metadata:
      labels:
        app: email-service
    spec:
      containers:
      - name: email-service
        image: microshop/email-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3007
        env:
        - name: PORT
          value: "3007"
        - name: NODE_ENV
          value: "development"
        - name: EMAIL_FROM
          value: "noreply@microshop.example"
        livenessProbe:
          httpGet:
            path: /health
            port: 3007
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3007
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: "0.2"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: email-service
  namespace: microshop
spec:
  selector:
    app: email-service
  ports:
  - port: 3007
    targetPort: 3007
