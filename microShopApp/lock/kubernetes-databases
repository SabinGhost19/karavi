---
# Users Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: users-db
  namespace: microshop
spec:
  serviceName: "users-db"
  replicas: 1
  selector:
    matchLabels:
      app: users-db
  template:
    metadata:
      labels:
        app: users-db
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: users-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: users-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: users-db
  namespace: microshop
spec:
  selector:
    app: users-db
  ports:
  - port: 27017
    targetPort: 27017
---

# Products Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: products-db
  namespace: microshop
spec:
  serviceName: "products-db"
  replicas: 1
  selector:
    matchLabels:
      app: products-db
  template:
    metadata:
      labels:
        app: products-db
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: products-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: products-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: products-db
  namespace: microshop
spec:
  selector:
    app: products-db
  ports:
  - port: 27017
    targetPort: 27017
---

# Orders Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orders-db
  namespace: microshop
spec:
  serviceName: "orders-db"
  replicas: 1
  selector:
    matchLabels:
      app: orders-db
  template:
    metadata:
      labels:
        app: orders-db
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: orders-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: orders-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  namespace: microshop
spec:
  selector:
    app: orders-db
  ports:
  - port: 27017
    targetPort: 27017
---

# Payments Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: payments-db
  namespace: microshop
spec:
  serviceName: "payments-db"
  replicas: 1
  selector:
    matchLabels:
      app: payments-db
  template:
    metadata:
      labels:
        app: payments-db
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: payments-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: payments-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: payments-db
  namespace: microshop
spec:
  selector:
    app: payments-db
  ports:
  - port: 27017
    targetPort: 27017
---

# Inventory Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: inventory-db
  namespace: microshop
spec:
  serviceName: "inventory-db"
  replicas: 1
  selector:
    matchLabels:
      app: inventory-db
  template:
    metadata:
      labels:
        app: inventory-db
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: inventory-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: inventory-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-db
  namespace: microshop
spec:
  selector:
    app: inventory-db
  ports:
  - port: 27017
    targetPort: 27017
---

# Notifications Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: notifications-db
  namespace: microshop
spec:
  serviceName: "notifications-db"
  replicas: 1
  selector:
    matchLabels:
      app: notifications-db
  template:
    metadata:
      labels:
        app: notifications-db
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: notifications-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: notifications-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: notifications-db
  namespace: microshop
spec:
  selector:
    app: notifications-db
  ports:
  - port: 27017
    targetPort: 27017
